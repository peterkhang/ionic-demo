{"version":3,"sources":["webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.scss","webpack:///src/app/pages/login/login.ts","webpack:///src/app/pages/login/login.html"],"names":["LoginPageModule","imports","forChild","path","component","declarations","LoginPage","auth","formBuilder","isFacebookLogin","registerCredentials","email","password","logout","loginForm","group","required","pattern","minLength","navigateForward","valid","key","controls","showError","message","get","user","value","name","setStorage","USER","navigateRoot","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAsBaA,eAAe;AAAA;AAAA,O;;AAAfA,qBAAe,6DAf3B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,6DAAaC,QAAb,CAAsB,CACpB;AACEC,cAAI,EAAE,EADR;AAEEC,mBAAS,EAAE;AAFb,SADoB,CAAtB,CALO,CADD;AAaRC,oBAAY,EAAE,CAAC,gDAAD;AAbN,OAAT,CAe2B,GAAfL,eAAe,CAAf;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFM,SAAS;AAMpB,2BAAmBC,IAAnB,EAAsDC,WAAtD,EAAgF;AAAA;;AAA7D,eAAAD,IAAA,GAAAA,IAAA;AAAmC,eAAAC,WAAA,GAAAA,WAAA;AALtD,eAAAC,eAAA,GAA0B,KAA1B;AAGO,eAAAC,mBAAA,GAA2B;AAAEC,iBAAK,EAAE,EAAT;AAAaC,oBAAQ,EAAE;AAAvB,WAA3B;AAIL,eAAKL,IAAL,CAAUM,MAAV;AACA,eAAKC,SAAL,GAAiB,KAAKN,WAAL,CAAiBO,KAAjB,CAAuB;AACtCJ,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWK,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,sEAAnB,CAAtB,CAAL,CAD+B;AAEtCL,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWI,QAAZ,EAAsB,0DAAWE,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAF4B,WAAvB,CAAjB;AAID;AAED;;;;;AAfoB;AAAA;AAAA,mCAkBJ;AACd,iBAAKX,IAAL,CAAUY,eAAV,CAA0B,aAA1B;AACD;AAED;;;;AAtBoB;AAAA;AAAA,kCAyBL;AAEb,gBAAI,CAAC,KAAKL,SAAL,CAAeM,KAApB,EAA2B;AACzB,mBAAK,IAAMC,GAAX,IAAkB,KAAKP,SAAL,CAAeQ,QAAjC,EAA2C;AACzC,oBAAI,CAAC,KAAKR,SAAL,CAAeQ,QAAf,CAAwBD,GAAxB,EAA6BD,KAAlC,EAAyC;AACvC,uBAAKb,IAAL,CAAUgB,SAAV,CAAoBF,GAAG,GAAG,KAAN,GAAc,KAAKd,IAAL,CAAUiB,OAAV,CAAkBC,GAAlB,CAAsB,oBAAtB,CAAlC,EADuC,CAEvC;;AACA,yBAAO,KAAP;AACD;AACF;AACF;AAED;;;;;;;;;;;AAaA;;;AACA,iBAAKlB,IAAL,CAAUmB,IAAV,GAAiB;AAACf,mBAAK,EAAE,KAAKG,SAAL,CAAeQ,QAAf,CAAwB,OAAxB,EAAiCK,KAAzC;AAAgDC,kBAAI,EAAE;AAAtD,aAAjB;AACA,iBAAKrB,IAAL,CAAUsB,UAAV,CAAqB,gEAAOC,IAA5B,EAAkC,KAAKvB,IAAL,CAAUmB,IAA5C;AACA,iBAAKnB,IAAL,CAAUwB,YAAV,CAAuB,WAAvB,EA5Ba,CA6Bb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;AArEmB;;AAAA;AAAA,S;;;;gBAZb;;gBADA;;;;AAaIzB,eAAS,6DARrB,gEAAU;AACT0B,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR,8DAFS;;AAAA,OAAV;AAKD;;;AAGsB,SAAT3B,SAAS,CAAT;;;;;;;;;;;;;;;;ACfb;AAAe;;;AAAA","file":"pages-login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { LoginPage } from './login';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: LoginPage\n      }\n    ])\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule { }","export default \"ion-content {\\n  padding: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xvZ2luLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FBQ0oiLCJmaWxlIjoibG9naW4uc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAzMHB4O1xufSJdfQ== */\";","import { environment } from './../../../environments/environment';\nimport { Component } from '@angular/core' ;\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms' ;\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service' ;\nimport { common } from '../../providers/common/common' ;\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  styleUrls: ['./login.scss']\n})\n/**\n * 로그인 페이지 클래스\n */\nexport class LoginPage {\n  isFacebookLogin:boolean = false ;\n  facebookUser:any ;\n  loginForm: FormGroup ;\n  public registerCredentials: any = { email: '', password: '' } ;\n\n  constructor(public auth: AuthServiceProvider, private formBuilder: FormBuilder) {\n\n    this.auth.logout();\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$')]],\n      password: ['', [Validators.required, Validators.minLength(7)]]\n    }) ;\n  }\n\n  /**\n   * 회원가입 버튼 클릭 시 불려지는 이벤트 함수 : 회원가입 페이지로 전환해 준다.\n   */\n  public signup() {\n    this.auth.navigateForward('/SignupPage') ;\n  }\n\n  /**\n   * 사용자가 입력한 로그인 정보(email & password)를 서버에서 인증해 준다.\n   */\n  public login() {\n\n    if (!this.loginForm.valid) {\n      for (const key in this.loginForm.controls) {\n        if (!this.loginForm.controls[key].valid) {\n          this.auth.showError(key + ' : ' + this.auth.message.get('form.field.invalid')) ;\n          //this.loginForm.get(key).focus() ;\n          return false;\n        }\n      }\n    }\n\n    /*\n    if ( this.registerCredentials.email < 7 ||\n      this.registerCredentials.email.replace('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$','') !== '' ) {\n      this.auth.showError('email : ' + this.auth.message.get('form.field.invalid')) ;\n      return false;\n    }\n\n    if (this.registerCredentials.password < 7 ) {\n      this.auth.showError('password : ' + this.auth.message.get('form.field.invalid'));\n      return false ;\n    }\n    */\n\n    //ToDo : This is just test code\n    this.auth.user = {email: this.loginForm.controls['email'].value, name: 'demo'} ;\n    this.auth.setStorage(common.USER, this.auth.user) ;\n    this.auth.navigateRoot('/MainPage') ;\n    // ToDo : This is real login code\n    // this.auth.login(this.registerCredentials)\n    //   .then((res: any) => {\n    //     this.auth.user = res ;\n    //     this.auth.setStorage(common.USER, this.auth.user).then(user =>{\n    //       this.auth.navigateRoot('/MainPage') ;\n    //     }, err => {\n    //         this.auth.presentAlert(this.auth.message.get('login.session.invalid')) ;\n    //     }) ;\n        \n    //   }, err => {\n    //     this.auth.removeStorage(common.USER) ;\n    //     this.auth.user = null ;\n    //     this.auth.presentAlert(this.auth.message.get('login.fails'));\n    //   });\n  }\n}\n","export default \"\\n    <ion-content class=\\\"ion-padding\\\">\\n      <div class=\\\"container\\\">\\n\\n        <form [formGroup]=\\\"loginForm\\\">\\n        <!-- 제목(로그인) -->\\n        <ion-row class=\\\"introTitle\\\">\\n          <label class=\\\"introTitle\\\">{{auth.message.get('login')}}</label>\\n        </ion-row>\\n\\n        <!-- 제목(아이디) -->\\n        <ion-row class=\\\"defaultTitle\\\">\\n          <label class=\\\"defaultTitle\\\">{{auth.message.get('email')}}</label>\\n        </ion-row>\\n\\n        <!-- 아이디 입력란 -->\\n        <ion-row class=\\\"defaultInput\\\">\\n          <ion-col size=\\\"9\\\" class=\\\"ion-no-padding\\\">\\n            <ion-input class=\\\"defaultInput\\\" type=\\\"text\\\" formControlName='email' [(ngModel)]='registerCredentials.email'\\n              placeholder=\\\"{{auth.message.get('email')}}\\\" class=\\\"ion-no-padding\\\" required></ion-input>\\n          </ion-col>\\n        </ion-row>\\n\\n        <!-- 제목(비밀번호) -->\\n        <ion-row class=\\\"defaultTitle\\\">\\n          <label class=\\\"defaultTitle\\\">{{auth.message.get('password')}}</label>\\n        </ion-row>\\n\\n        <!-- 비밀번호 입력란 -->\\n        <ion-row class=\\\"defaultInput\\\">\\n          <ion-col size=\\\"9\\\" class=\\\"ion-no-padding\\\">\\n            <ion-input class=\\\"defaultInput\\\" required=\\\"\\\" type=\\\"password\\\" formControlName='password' [(ngModel)]='registerCredentials.password' type='password'\\n              placeholder=\\\"{{auth.message.get('password')}}\\\" class=\\\"ion-no-padding\\\" required></ion-input>\\n          </ion-col>\\n        </ion-row>\\n\\n        </form>\\n\\n        <!-- 자동로그인 -->\\n        <ion-row class=\\\"autoLogin\\\">\\n          <button class=\\\"login\\\" (click)=\\\"login()\\\">{{auth.message.get('login')}}</button>\\n        </ion-row>\\n\\n        \\n\\n        <!-- 회원가입  -->\\n        <ion-row>\\n          <button class=\\\"signup\\\" (click)='signup()'>{{auth.message.get('signup')}}</button>\\n        </ion-row>\\n      </div>\\n    </ion-content>\\n\\n\\n<!-- ----------------------------------------------------------------------------------------------------------------------------- -->\\n\\n\\n\\n<style>\\n\\n\\n  div.container {\\n    flex-direction: column;\\n    padding: 0rem 1.5rem;\\n  }\\n\\n  /* 제목 (로그인) */\\n  label.introTitle {\\n    font-size: 2.8rem;\\n    margin-top: 6rem;\\n    margin-bottom: 1rem;\\n    margin-left: 0.3rem;\\n  }\\n\\n  /* 아이디,비밀번호 제목*/\\n  label.defaultTitle {\\n    font-size: 1.2rem;\\n    font-weight: bold;\\n    margin-bottom: 1rem;\\n  }\\n\\n  ion-row.defaultTitle {\\n    margin-top: 4rem;\\n  }\\n\\n  /* 아이디,비밀번호 입력 input */\\n  ion-input.defaultInput {\\n    text-align: left;\\n    font-size: 1.5rem;\\n    border: solid 0.1rem white;\\n    border-bottom-color: var(--bory-border);\\n    --placeholder-color: var(--bory-placeholder);\\n    --padding-top: 0.3rem;\\n    --padding-bottom: 0.3rem;\\n    width: 22rem;\\n    background: inherit;\\n  }\\n\\n\\n  ion-row.autoLogin {\\n    margin-top: 2em;\\n  }\\n\\n  ion-label.autoLogin {\\n    font-size: 1.2rem;\\n    display: flex;\\n    align-items: center;\\n    color: var(--bory-grey);\\n    margin-left: 0.5rem;\\n  }\\n\\n\\n  /* 로그인 버튼 */\\n  button.login {\\n    width: 100%;\\n    height: 3.6rem;\\n    font-size: 1.2rem;\\n    text-align: center;\\n    display: block;\\n    background-color: var(--ion-color-primary);\\n    color: white;\\n    border-radius: 1.8rem;\\n    margin-left: auto;\\n    margin-top: 1rem;\\n  }\\n\\n\\n  /* 아이디찾기 / 비밀번호찾기 버튼 */\\n  ion-row.search {\\n    margin-top: 1rem;\\n  }\\n\\n  button.search {\\n    color: var(--bory-placeholder);\\n    font-size: 1.1rem;\\n    background-color: white;\\n  }\\n\\n\\n  /*  회원가입 버튼 */\\n  button.signup {\\n    width: 100%;\\n    height: 5rem;\\n    font-size: 1.2rem;\\n    font-weight: 400;\\n    text-align: center;\\n    color: var(--ion-color-primary);\\n    background: white;\\n    border: 0.2rem solid var(--ion-color-primary);\\n    margin-top: 2rem;\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  ion-row.snsLogin {\\n    width: 100%;\\n  }\\n\\n  ion-col.snsLogin {\\n    display: flex;\\n    align-items: center;\\n  }\\n\\n  button.facebookLogin {\\n    width: 100%;\\n    height: 5rem;\\n    font-size: 1.2rem;\\n    text-align: center;\\n    color: white;\\n    background: var(--bory-facebook) !important;\\n    display: flex;\\n    align-items: center;\\n    padding-right: 4rem;\\n  }\\n\\n  button.googleLogin {\\n    width: 100%;\\n    height: 5rem;\\n    font-size: 1.2rem;\\n    text-align: center;\\n    color: white;\\n    background: var(--bory-google) !important;\\n    display: flex;\\n    align-items: center;\\n    padding-right: 4rem;\\n    margin-top: 0.5rem;\\n  }\\n\\n  label.snsLogin {\\n    width: 100%;\\n    text-align: center;\\n    padding-right: 1.2rem;\\n  }\\n\\n  ion-img.facebookLogo {\\n    width: 4rem;\\n    height: 4rem;\\n    text-align: left;\\n    float: left;\\n  }\\n\\n  ion-img.googleLogo {\\n    width: 4rem;\\n    height: 4rem;\\n    text-align: left;\\n    float: left;\\n  }\\n</style>\\n\";"]}